<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbHint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>